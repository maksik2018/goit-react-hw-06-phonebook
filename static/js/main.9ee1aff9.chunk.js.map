{"version":3,"sources":["components/Container.styled.jsx","components/Container.jsx","components/ContactForm.jsx","components/ContactList.styled.jsx","components/ContactList.jsx","components/Filter.jsx","App.js","reportWebVitals.js","index.js"],"names":["Div","styled","div","Container","children","ContactForm","onSubmit","useState","name","setName","number","setNumber","onChange","event","target","value","e","preventDefault","placeholder","type","pattern","title","required","List","ul","Item","li","ContactList","contacts","onDeleteContact","map","contact","onClick","id","Filter","App","setContacts","filter","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","data","newContact","nextId","find","toLowerCase","alert","prev","targetValue","includes","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ee1aff9.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Div = styled.div`\r\n  margin-left: 30px;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Div } from '../components/Container.styled';\r\n\r\nexport default function Container({ children }) {\r\n  return <Div>{children}</Div>;\r\n }\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\n","import { React, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ContactForm ({onSubmit}) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  \r\n\r\n  \r\n  const onChange = event => {\r\n    // const value = event.currentTarget.value;\r\n    // const name = event.currentTarget.name;\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n    \r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n         <input\r\n          placeholder=\"indicate your name\"\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={onChange}\r\n        />\r\n           <input\r\n          placeholder=\"indicate your phone number\"\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={onChange}\r\n        />\r\n        <button type='submit'>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n// }\r\nContactForm.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport const Item = styled.li`\r\n  margin-right: 40px;\r\n  list-style: none;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { List, Item} from \"../components/ContactList.styled\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <List>\r\n    {contacts.map((contact) => (\r\n      <Item key={contact.id} >\r\n        <p>{contact.name}</p>\r\n        <p>{contact.number}</p>\r\n        <button type=\"button\" onClick={() => onDeleteContact(contact.id)}>Удалить</button>\r\n      </Item>\r\n    ))}\r\n  </List>\r\n);\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label>\r\n        Find contacts by name <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import { React, useState, useEffect } from \"react\";\nimport nextId from \"react-id-generator\";\nimport Container from \"./components/Container\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    // console.log(parsedContacts);\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (data) => {\n    const { name, number } = data;\n    // const { contacts } = this.state;\n    const id = nextId();\n    const newContact = {\n      name,\n      id,\n      number,\n    };\n\n    const checkOnContact = contacts.find(\n      (contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (checkOnContact) {\n      alert(`${newContact.name} is already in contacts`);\n    } else {\n      setContacts((prev) => [...prev, newContact]);\n    }\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts((prev) => prev.filter((contact) => contactId !== contact.id));\n  };\n\n  const onFilterChange = (event) => {\n    const targetValue = event.target.value;\n    setFilter(targetValue);\n  };\n\n  const filterByName = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  return (\n    <Container>\n      <h1> Phonebook </h1>\n      <h2>Add new contact</h2>\n      <ContactForm onSubmit={addContact} />\n      <h2>Find contact</h2>\n      <Filter value={filter} onChange={onFilterChange} />\n      <h2>Contact list</h2>\n      <ContactList contacts={filterByName()} onDeleteContact={deleteContact} />\n    </Container>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}